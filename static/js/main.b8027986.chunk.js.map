{"version":3,"sources":["components/feedback/statistics/Statistics.module.css","components/feedback/notification/Notification.module.css","components/feedback/controls/Feedback.module.css","components/feedback/controls/Button.jsx","components/feedback/controls/FeedbackOptions.jsx","components/feedback/section/Section.jsx","components/feedback/statistics/Statistics.jsx","components/feedback/notification/Notification.jsx","App.js","index.js","components/feedback/section/Section.module.css"],"names":["module","exports","Button","option","onLeaveFeedback","className","s","button","onClick","Notification","propTypes","options","PropTypes","array","isRequired","func","FeedbackOptions","control","map","Section","children","title","section","container","Statistics","good","neutral","bad","total","positivePercentage","statistics","message","text","Feedback","state","hiddeStats","feedbackIncrement","id","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","totalValue","this","React","Component","ReactDOM","render","StrictMode","App","document","querySelector"],"mappings":"4IACAA,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,KAAO,6B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,OAAS,2B,4KCWhDC,EAVA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBACxB,OACE,6BACE,wBAAQC,UAAWC,IAAEC,OAAQC,QAAS,kBAAMJ,EAAgBD,IAA5D,SACGA,OCYTM,aAAaC,UAAY,CACvBC,QAASC,IAAUC,MAAMC,WACzBV,gBAAiBQ,IAAUG,KAAKD,YAEnBE,MAlBS,SAAC,GAAkC,IAAhCL,EAA+B,EAA/BA,QAASP,EAAsB,EAAtBA,gBAClC,OACE,oBAAIC,UAAWC,IAAEW,QAAjB,SACGN,EAAQO,KAAI,SAAAf,GAAM,OACjB,cAAC,EAAD,CAEEA,OAAQA,EACRC,gBAAiBA,GAFZD,S,gBCUAgB,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,yBAAShB,UAAWC,IAAEgB,QAAtB,SACE,sBAAKjB,UAAWC,IAAEiB,UAAlB,UACE,oBAAIlB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBD,Q,iBCwBMI,EA7BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIxB,UAAWC,IAAEwB,WAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,a,iBCTOpB,EAPM,SAAC,GAAiB,IAAfsB,EAAc,EAAdA,QACtB,OAAO,mBAAG1B,UAAWC,IAAE0B,KAAhB,SAAuBD,KCE1BE,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAa,E,EAEbC,kBAAoB,SAAAC,GAClB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAKE,EAAUF,GAAM,MAExB,EAAKF,YAAa,G,EAGpBK,mBAAqB,WAEnB,OADc,EAAKN,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,K,EAIlEc,gCAAkC,SAAAb,GAEhC,OADyBc,KAAKC,MAAO,EAAKT,MAAMT,KAAOG,EAAS,M,4CAIlE,WACE,IAAMgB,EAAaC,KAAKL,qBAClBX,EAAqBgB,KAAKJ,gCAAgCG,GAChE,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAAS,CAAC,OAAQ,UAAW,OAC7BP,gBAAiByC,KAAKT,sBAG1B,cAAC,EAAD,CAASf,MAAM,aAAf,SACGwB,KAAKV,WACJ,cAAC,EAAD,CAAcJ,QAAQ,yBAEtB,cAAC,EAAD,CACEN,KAAMoB,KAAKX,MAAMT,KACjBC,QAASmB,KAAKX,MAAMR,QACpBC,IAAKkB,KAAKX,MAAMP,IAChBC,MAAOgB,EACPf,mBAAoBA,a,GA9CXiB,IAAMC,WAsDdd,I,MCvDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,cAAc,W,kBCRzBrD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,MAAQ,0B","file":"static/js/main.b8027986.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3nLi4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3M3bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Feedback_control__3IdLE\",\"button\":\"Feedback_button__3Rft7\"};","import s from './Feedback.module.css';\r\n\r\nconst Button = ({ option, onLeaveFeedback }) => {\r\n  return (\r\n    <li>\r\n      <button className={s.button} onClick={() => onLeaveFeedback(option)}>\r\n        {option}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport s from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={s.control}>\r\n      {options.map(option => (\r\n        <Button\r\n          key={option}\r\n          option={option}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <div className={s.container}>\r\n        <h2 className={s.title}>{title}</h2>\r\n        {children}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={s.statistics}>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback: {positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.text}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React from 'react';\nimport FeedbackOptions from './components/feedback/controls/FeedbackOptions';\nimport Section from './components/feedback/section/Section';\nimport Statistics from './components/feedback/statistics/Statistics';\nimport Notification from './components/feedback/notification/Notification';\n\nclass Feedback extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  hiddeStats = true;\n\n  feedbackIncrement = id => {\n    this.setState(prevState => ({\n      [id]: prevState[id] + 1,\n    }));\n    this.hiddeStats = false;\n  };\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    const positiveFeedback = Math.round((this.state.good / total) * 100);\n    return positiveFeedback;\n  };\n\n  render() {\n    const totalValue = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(totalValue);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.feedbackIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.hiddeStats ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={totalValue}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\nexport default Feedback;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__27mri\",\"container\":\"Section_container__1uG8k\",\"title\":\"Section_title__3YrCH\"};"],"sourceRoot":""}